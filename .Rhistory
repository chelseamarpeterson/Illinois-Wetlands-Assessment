alpha=0.2, color="blue") +
labs(y="Share of Properties at Risk of Flooding in 30 Years [%]",
x="Unprotected Non-WOTUS Wetland Area [ha/1000 tract ha]") +
scale_y_continuous(limits=c(0,107),breaks=seq(0,100,25)) +
theme(text = element_text(size=14))
p2
post.line.df = read.csv("CEJST_Analysis/Posteriors/FLD_PFS_Unnormalized_Linear_Model_Prediction.csv")
area.cj.df.unprotected = read.csv("CEJST_Analysis/Posteriors/CEJST_WetlandArea_Dataframe_NoUnproCnties.csv")
#wr = "Seasonally Flooded"
wr = "Permanently Flooded"
area.df.sf = area.cj.df.unprotected[which(area.cj.df.unprotected$water_cutoff == wr),]
line.df.sf = post.line.df[which(post.line.df$water_cutoff == wr),]
p2 = ggplot() +
geom_point(data=area.df.sf,
aes(x=Tract_Normalized_Wetland_Area*1000,
y=FLD_PFS*100)) +
geom_line(data=line.df.sf,
aes(x=area,
y=100*mean),
color="blue") +
geom_ribbon(data=line.df.sf,
aes(x=area,
ymin=100*`X2.5`,
ymax=100*`X97.5`),
alpha=0.2, color="blue") +
labs(y="Share of Properties at Risk of Flooding in 30 Years [%]",
x="Unprotected Non-WOTUS Wetland Area [ha/1000 tract ha]") +
scale_y_continuous(limits=c(0,107),breaks=seq(0,100,25)) +
theme(text = element_text(size=14))
p2
View(post.df)
post.line.df = read.csv("CEJST_Analysis/Posteriors/FLD_PFS_Unnormalized_Linear_Model_Prediction.csv")
area.cj.df.unprotected = read.csv("CEJST_Analysis/Posteriors/CEJST_WetlandArea_Dataframe_NoUnproCnties.csv")
#wr = "Seasonally Flooded"
#wr = "Permanently Flooded"
wr = "Intermittently Flooded"
area.df.sf = area.cj.df.unprotected[which(area.cj.df.unprotected$water_cutoff == wr),]
line.df.sf = post.line.df[which(post.line.df$water_cutoff == wr),]
p2 = ggplot() +
geom_point(data=area.df.sf,
aes(x=Tract_Normalized_Wetland_Area*1000,
y=FLD_PFS*100)) +
geom_line(data=line.df.sf,
aes(x=area,
y=100*mean),
color="blue") +
geom_ribbon(data=line.df.sf,
aes(x=area,
ymin=100*`X2.5`,
ymax=100*`X97.5`),
alpha=0.2, color="blue") +
labs(y="Share of Properties at Risk of Flooding in 30 Years [%]",
x="Unprotected Non-WOTUS Wetland Area [ha/1000 tract ha]") +
scale_y_continuous(limits=c(0,107),breaks=seq(0,100,25)) +
theme(text = element_text(size=14))
p2
ggplot() +
geom_point(data=area.cj.df.unprotected,
aes(x=Tract_Normalized_Wetland_Area*1000,
y=FLD_PFS*100)) +
geom_line(data=line.df,
aes(x=area,
y=100*mean),
color="blue") +
geom_ribbon(data=line.df,
aes(x=area,
ymin=100*`X2.5`,
ymax=100*`X97.5`),
alpha=0.2, color="blue") +
labs(y="Share of Properties at Risk of Flooding in 30 Years [%]",
x="Unprotected Non-WOTUS Wetland Area [ha/1000 tract ha]") +
scale_y_continuous(limits=c(0,107),breaks=seq(0,100,25)) +
theme(text = element_text(size=14)) + facet_wrap(.~water_cutoff)
ggplot() +
geom_point(data=area.cj.df.unprotected,
aes(x=Tract_Normalized_Wetland_Area*1000,
y=FLD_PFS*100)) +
geom_line(data=post.line.df,
aes(x=area,
y=100*mean),
color="blue") +
geom_ribbon(data=post.line.df,
aes(x=area,
ymin=100*`X2.5`,
ymax=100*`X97.5`),
alpha=0.2, color="blue") +
labs(y="Share of Properties at Risk of Flooding in 30 Years [%]",
x="Unprotected Non-WOTUS Wetland Area [ha/1000 tract ha]") +
scale_y_continuous(limits=c(0,107),breaks=seq(0,100,25)) +
theme(text = element_text(size=14)) + facet_wrap(.~water_cutoff)
ggplot() +
geom_point(data=area.cj.df.unprotected,
aes(x=Tract_Normalized_Wetland_Area*1000,
y=FLD_PFS*100)) +
geom_line(data=post.line.df,
aes(x=area,
y=100*mean),
color="blue") +
geom_ribbon(data=post.line.df,
aes(x=area,
ymin=100*`X2.5`,
ymax=100*`X97.5`),
alpha=0.2, color="blue") +
labs(y="Share of Properties at Risk of Flooding in 30 Years [%]",
x="Unprotected Non-WOTUS Wetland Area [ha/1000 tract ha]") +
scale_y_continuous(limits=c(0,110),breaks=seq(0,100,25)) +
theme(text = element_text(size=14)) + facet_wrap(.~water_cutoff)
n = 2000
grp = groups[2]
samples = extract.samples(linear.models[[grp]])
df = area.dfs[[grp]]
post.a = samples$a
post.b = samples$b
post.line.df = data.frame(matrix(nrow=0, ncol=5))
colnames(post.line.df) = c("water_cutoff","area","mean","2.5","97.5")
for (i in 1:n.w) {
wr = levels(factor(df$water_cutoff))[i]
wr.ind = which(df$water_cutoff == wr)
df.wr = data.frame(matrix(nrow=n, ncol=5))
colnames(df.wr) = c("water_cutoff","area","mean","2.5","97.5")
wr.area.max = max(df$Mean_Normalized_Wetland_Area[wr.ind])
area.range = seq(0, wr.area.max, by=wr.area.max/(n-1))
df.wr[1:n,"water_cutoff"] = wr
df.wr[1:n,"area"] = area.range*global.means[[grp]]*1000
for (j in 1:n) {
pred.ij = exp(post.a[,i] + post.b[,i]*area.range[j])
hpdi.ij = HPDI(pred.ij, prob=0.95)
df.wr[j,"mean"] = mean(pred.ij)
df.wr[j,"2.5"] = hpdi.ij[1]
df.wr[j,"97.5"] = hpdi.ij[2]
}
post.line.df = rbind(post.line.df, df.wr)
}
max(post.line.df[which(post.line.df$water_cutoff == "Seasonally Flooded"),"area"])
# write dataframe for posterior linear prediction
write.csv(post.line.df, "CEJST_Analysis/Posteriors/FLD_PFS_Unnormalized_Linear_Model_Prediction.csv", row.names=F)
# write area dataframe without protected counties for plotting
write.csv(df, "CEJST_Analysis/Posteriors/CEJST_WetlandArea_Dataframe_NoUnproCnties.csv", row.names=F)
df$FLD_PFS
fld.lists = list()
for (i in 1:n.g) {
grp = groups[i]
df = area.dfs[[grp]]
fld.lists[[grp]] = list(cutoff_id = as.integer(factor(df$water_cutoff)),
area_norm = as.vector(df$Mean_Normalized_Wetland_Area),
fld_pfs = as.vector(df$FLD_PFS)*100)
}
# fit models
set.seed(271)
linear.models = list()
for (i in 1:n.g) {
grp = groups[i]
ml <- ulam(alist(fld_pfs ~ normal(mu, sigma),
log(mu) <- a[cutoff_id] + b[cutoff_id]*area_norm,
c(a, b)[cutoff_id] ~ multi_normal( c(a_fld,b_fld) , Rho , sigma_fld ),
a_fld ~ normal(0,1),
b_fld ~ normal(0,1),
sigma_fld ~ exponential(1),
sigma ~ exponential(1),
Rho ~ lkj_corr(2)),
data=fld.lists[[grp]], chains=1, log_lik=TRUE)
linear.models[[grp]] = ml
}
# extract posterior samples and calculate 95% HPDIs
post.df = data.frame(matrix(nrow=n.w, ncol=5))
colnames(post.df) = c("group","water_cutoff","mean","2.5","97.5")
k = 1
for (i in 1:n.g) {
grp = groups[i]
df = area.dfs[[grp]]
m = linear.models[[grp]]
samples = extract.samples(m)
post.a = samples$a
post.b = samples$b
for (j in 1:n.w) {
post.df[k,"group"] = group.labels[i]
post.df[k,"water_cutoff"] = levels(factor(df$water_cutoff))[j]
post.df[k,"mean"] = mean(post.b[,j])
post.df[k,"2.5"] = HPDI(post.b[,j], prob=0.95)[1]
post.df[k,"97.5"] = HPDI(post.b[,j], prob=0.95)[2]
k = k + 1
}
}
# save posterior dataframe
setwd(path_to_gitrepo)
write.csv(post.df, "CEJST_Analysis/Posteriors/FLD_PFS_100_Unnormalized_Linear_Model_EffectSize_HPDIs.csv", row.names=F)
# plot lines at Seasonally Flooded cutoff
n = 2000
grp = groups[2]
samples = extract.samples(linear.models[[grp]])
df = area.dfs[[grp]]
post.a = samples$a
post.b = samples$b
post.line.df = data.frame(matrix(nrow=0, ncol=5))
colnames(post.line.df) = c("water_cutoff","area","mean","2.5","97.5")
for (i in 1:n.w) {
wr = levels(factor(df$water_cutoff))[i]
wr.ind = which(df$water_cutoff == wr)
df.wr = data.frame(matrix(nrow=n, ncol=5))
colnames(df.wr) = c("water_cutoff","area","mean","2.5","97.5")
wr.area.max = max(df$Mean_Normalized_Wetland_Area[wr.ind])
area.range = seq(0, wr.area.max, by=wr.area.max/(n-1))
df.wr[1:n,"water_cutoff"] = wr
df.wr[1:n,"area"] = area.range*global.means[[grp]]*1000
for (j in 1:n) {
pred.ij = exp(post.a[,i] + post.b[,i]*area.range[j])
hpdi.ij = HPDI(pred.ij, prob=0.95)
df.wr[j,"mean"] = mean(pred.ij)
df.wr[j,"2.5"] = hpdi.ij[1]
df.wr[j,"97.5"] = hpdi.ij[2]
}
post.line.df = rbind(post.line.df, df.wr)
}
max(post.line.df[which(post.line.df$water_cutoff == "Seasonally Flooded"),"area"])
# write dataframe for posterior linear prediction
write.csv(post.line.df, "CEJST_Analysis/Posteriors/FLD_PFS_100_Unnormalized_Linear_Model_Prediction.csv", row.names=F)
# plot effect sizes for results normalized by census tract area
post.df = read.csv("CEJST_Analysis/Posteriors/FLD_PFS_100_Unnormalized_Linear_Model_EffectSize_HPDIs.csv")
post.df$water_label = rep(0, nrow(post.df))
for (i in 1:n.w) { post.df$water_label[which(post.df$water_cutoff == water.regimes[i])] = water.reg.labels[i] }
p1 = ggplot(post.df,
aes(x=mean,
y=factor(water_label, levels=water.reg.labels))) +
geom_vline(xintercept=0) +
geom_point(position=position_dodge(0.5)) +
geom_errorbarh(aes(xmin=`X2.5`,
xmax=`X97.5`,
y=factor(water_label, levels=water.reg.labels)),
height=0.2, position=position_dodge(0.5)) +
labs(y="Wetland Flood-Frequency Cutoff",
x="Posterior Effect Size for Log(Share of Properties with Flood Risk [%])\nv. Unprotected Non-WOTUS Wetland Area [ha/1000 tract ha]") +
theme(text = element_text(size=14)) +
facet_wrap(.~group, scales="free_x")
p1
fld.lists = list()
for (i in 1:n.g) {
grp = groups[i]
df = area.dfs[[grp]]
fld.lists[[grp]] = list(cutoff_id = as.integer(factor(df$water_cutoff)),
area_norm = as.vector(df$Mean_Normalized_Wetland_Area),
fld_pfs = as.vector(df$FLD_PFS)*100)
}
# fit models
set.seed(271)
linear.models = list()
for (i in 1:n.g) {
grp = groups[i]
ml <- ulam(alist(fld_pfs ~ normal(mu, sigma),
log(mu) <- a[cutoff_id] + b[cutoff_id]*area_norm,
c(a, b)[cutoff_id] ~ multi_normal( c(a_fld,b_fld) , Rho , sigma_fld ),
a_fld ~ normal(0,1),
b_fld ~ normal(0,1),
sigma_fld ~ exponential(1),
sigma ~ exponential(1),
Rho ~ lkj_corr(2)),
data=fld.lists[[grp]], chains=1, log_lik=TRUE)
linear.models[[grp]] = ml
}
# extract posterior samples and calculate 95% HPDIs
post.df = data.frame(matrix(nrow=n.w, ncol=5))
colnames(post.df) = c("group","water_cutoff","mean","2.5","97.5")
k = 1
for (i in 1:n.g) {
grp = groups[i]
df = area.dfs[[grp]]
m = linear.models[[grp]]
samples = extract.samples(m)
post.a = samples$a
post.b = samples$b
for (j in 1:n.w) {
post.df[k,"group"] = group.labels[i]
post.df[k,"water_cutoff"] = levels(factor(df$water_cutoff))[j]
post.df[k,"mean"] = mean(post.b[,j])
post.df[k,"2.5"] = HPDI(post.b[,j], prob=0.95)[1]
post.df[k,"97.5"] = HPDI(post.b[,j], prob=0.95)[2]
k = k + 1
}
}
# save posterior dataframe
setwd(path_to_gitrepo)
write.csv(post.df, "CEJST_Analysis/Posteriors/FLD_PFS_100_Unnormalized_Linear_Model_EffectSize_HPDIs.csv", row.names=F)
# plot effect sizes for results normalized by census tract area
post.df = read.csv("CEJST_Analysis/Posteriors/FLD_PFS_100_Unnormalized_Linear_Model_EffectSize_HPDIs.csv")
post.df$water_label = rep(0, nrow(post.df))
for (i in 1:n.w) { post.df$water_label[which(post.df$water_cutoff == water.regimes[i])] = water.reg.labels[i] }
p1 = ggplot(post.df,
aes(x=mean,
y=factor(water_label, levels=water.reg.labels))) +
geom_vline(xintercept=0) +
geom_point(position=position_dodge(0.5)) +
geom_errorbarh(aes(xmin=`X2.5`,
xmax=`X97.5`,
y=factor(water_label, levels=water.reg.labels)),
height=0.2, position=position_dodge(0.5)) +
labs(y="Wetland Flood-Frequency Cutoff",
x="Posterior Effect Size for Log(Share of Properties with Flood Risk [%])\nv. Unprotected Non-WOTUS Wetland Area [ha/1000 tract ha]") +
theme(text = element_text(size=14)) +
facet_wrap(.~group, scales="free_x")
p1
fld.lists = list()
for (i in 1:n.g) {
grp = groups[i]
df = area.dfs[[grp]]
fld.lists[[grp]] = list(cutoff_id = as.integer(factor(df$water_cutoff)),
area_norm = as.vector(df$Tract_Normalized_Wetland_Area),
fld_pfs = as.vector(df$FLD_PFS)*100)
}
for (i in n.g:n.g) {
grp = groups[i]
ml <- ulam(alist(fld_pfs ~ normal(mu, sigma),
log(mu) <- a[cutoff_id] + b[cutoff_id]*area_norm,
c(a, b)[cutoff_id] ~ multi_normal( c(a_fld,b_fld) , Rho , sigma_fld ),
a_fld ~ normal(0,1),
b_fld ~ normal(0,1),
sigma_fld ~ exponential(1),
sigma ~ exponential(1),
Rho ~ lkj_corr(2)),
data=fld.lists[[grp]], chains=1, log_lik=TRUE)
linear.models[[grp]] = ml
}
hist(area.dfs[[groups[1]]]$Tract_Normalized_Wetland_Area)
hist(area.dfs[[groups[2]]]$Tract_Normalized_Wetland_Area)
hist(area.dfs[[groups[1]]]$Tract_Normalized_Wetland_Area*1000)
hist(area.dfs[[groups[2]]]$Tract_Normalized_Wetland_Area*1000)
fld.lists = list()
for (i in 1:n.g) {
grp = groups[i]
df = area.dfs[[grp]]
fld.lists[[grp]] = list(cutoff_id = as.integer(factor(df$water_cutoff)),
area_norm = as.vector(df$Tract_Normalized_Wetland_Area)*1000,
fld_pfs = as.vector(df$FLD_PFS)*100)
}
# fit models
set.seed(271)
for (i in n.g:n.g) {
grp = groups[i]
ml <- ulam(alist(fld_pfs ~ normal(mu, sigma),
log(mu) <- a[cutoff_id] + b[cutoff_id]*area_norm,
c(a, b)[cutoff_id] ~ multi_normal( c(a_fld,b_fld) , Rho , sigma_fld ),
a_fld ~ normal(0,1),
b_fld ~ normal(0,1),
sigma_fld ~ exponential(1),
sigma ~ exponential(1),
Rho ~ lkj_corr(2)),
data=fld.lists[[grp]], chains=1, log_lik=TRUE)
linear.models[[grp]] = ml
}
post.df = data.frame(matrix(nrow=n.w, ncol=5))
colnames(post.df) = c("group","water_cutoff","mean","2.5","97.5")
k = 1
for (i in 1:n.g) {
grp = groups[i]
df = area.dfs[[grp]]
m = linear.models[[grp]]
samples = extract.samples(m)
post.a = samples$a
post.b = samples$b
for (j in 1:n.w) {
post.df[k,"group"] = group.labels[i]
post.df[k,"water_cutoff"] = levels(factor(df$water_cutoff))[j]
post.df[k,"mean"] = mean(post.b[,j])
post.df[k,"2.5"] = HPDI(post.b[,j], prob=0.95)[1]
post.df[k,"97.5"] = HPDI(post.b[,j], prob=0.95)[2]
k = k + 1
}
}
# save posterior dataframe
setwd(path_to_gitrepo)
write.csv(post.df, "CEJST_Analysis/Posteriors/FLD_PFS_100_Area_Unnormalized_Linear_Model_EffectSize_HPDIs.csv", row.names=F)
# plot effect sizes for results normalized by census tract area
post.df = read.csv("CEJST_Analysis/Posteriors/FLD_PFS_100_Area_Unnormalized_Linear_Model_EffectSize_HPDIs.csv")
post.df$water_label = rep(0, nrow(post.df))
for (i in 1:n.w) { post.df$water_label[which(post.df$water_cutoff == water.regimes[i])] = water.reg.labels[i] }
p1 = ggplot(post.df,
aes(x=mean,
y=factor(water_label, levels=water.reg.labels))) +
geom_vline(xintercept=0) +
geom_point(position=position_dodge(0.5)) +
geom_errorbarh(aes(xmin=`X2.5`,
xmax=`X97.5`,
y=factor(water_label, levels=water.reg.labels)),
height=0.2, position=position_dodge(0.5)) +
labs(y="Wetland Flood-Frequency Cutoff",
x="Posterior Effect Size for Log(Share of Properties with Flood Risk [%])\nv. Unprotected Non-WOTUS Wetland Area [ha/1000 tract ha]") +
theme(text = element_text(size=14)) +
facet_wrap(.~group, scales="free_x")
p1
fld.lists = list()
for (i in 1:n.g) {
grp = groups[i]
df = area.dfs[[grp]]
fld.lists[[grp]] = list(cutoff_id = as.integer(factor(df$water_cutoff)),
area_norm = as.vector(df$Tract_Normalized_Wetland_Area)*1000,
fld_pfs = as.vector(df$FLD_PFS)*100)
}
# fit models
set.seed(271)
linear.models = list()
for (i in n.g:n.g) {
grp = groups[i]
ml <- ulam(alist(fld_pfs ~ normal(mu, sigma),
log(mu) <- a[cutoff_id] + b[cutoff_id]*area_norm,
c(a, b)[cutoff_id] ~ multi_normal( c(a_fld,b_fld) , Rho , sigma_fld ),
a_fld ~ normal(0,1),
b_fld ~ normal(0,1),
sigma_fld ~ exponential(1),
sigma ~ exponential(1),
Rho ~ lkj_corr(2)),
data=fld.lists[[grp]], chains=1, log_lik=TRUE)
linear.models[[grp]] = ml
}
post.df = data.frame(matrix(nrow=n.w, ncol=5))
colnames(post.df) = c("group","water_cutoff","mean","2.5","97.5")
k = 1
for (i in 1:n.g) {
grp = groups[i]
df = area.dfs[[grp]]
m = linear.models[[grp]]
samples = extract.samples(m)
post.a = samples$a
post.b = samples$b
for (j in 1:n.w) {
post.df[k,"group"] = group.labels[i]
post.df[k,"water_cutoff"] = levels(factor(df$water_cutoff))[j]
post.df[k,"mean"] = mean(post.b[,j])
post.df[k,"2.5"] = HPDI(post.b[,j], prob=0.95)[1]
post.df[k,"97.5"] = HPDI(post.b[,j], prob=0.95)[2]
k = k + 1
}
}
i = 1
grp = groups[i]
df = area.dfs[[grp]]
m = linear.models[[grp]]
samples = extract.samples(m)
post.a = samples$a
linear.models
for (i in 1:(n.g-1)) {
grp = groups[i]
ml <- ulam(alist(fld_pfs ~ normal(mu, sigma),
log(mu) <- a[cutoff_id] + b[cutoff_id]*area_norm,
c(a, b)[cutoff_id] ~ multi_normal( c(a_fld,b_fld) , Rho , sigma_fld ),
a_fld ~ normal(0,1),
b_fld ~ normal(0,1),
sigma_fld ~ exponential(1),
sigma ~ exponential(1),
Rho ~ lkj_corr(2)),
data=fld.lists[[grp]], chains=1, log_lik=TRUE)
linear.models[[grp]] = ml
}
post.df = data.frame(matrix(nrow=n.w, ncol=5))
colnames(post.df) = c("group","water_cutoff","mean","2.5","97.5")
k = 1
for (i in 1:n.g) {
grp = groups[i]
df = area.dfs[[grp]]
m = linear.models[[grp]]
samples = extract.samples(m)
post.a = samples$a
post.b = samples$b
for (j in 1:n.w) {
post.df[k,"group"] = group.labels[i]
post.df[k,"water_cutoff"] = levels(factor(df$water_cutoff))[j]
post.df[k,"mean"] = mean(post.b[,j])
post.df[k,"2.5"] = HPDI(post.b[,j], prob=0.95)[1]
post.df[k,"97.5"] = HPDI(post.b[,j], prob=0.95)[2]
k = k + 1
}
}
# save posterior dataframe
setwd(path_to_gitrepo)
write.csv(post.df, "CEJST_Analysis/Posteriors/FLD_PFS_100_Area_Unnormalized_Linear_Model_EffectSize_HPDIs.csv", row.names=F)
post.df = read.csv("CEJST_Analysis/Posteriors/FLD_PFS_100_Area_Unnormalized_Linear_Model_EffectSize_HPDIs.csv")
post.df$water_label = rep(0, nrow(post.df))
for (i in 1:n.w) { post.df$water_label[which(post.df$water_cutoff == water.regimes[i])] = water.reg.labels[i] }
p1 = ggplot(post.df,
aes(x=mean,
y=factor(water_label, levels=water.reg.labels))) +
geom_vline(xintercept=0) +
geom_point(position=position_dodge(0.5)) +
geom_errorbarh(aes(xmin=`X2.5`,
xmax=`X97.5`,
y=factor(water_label, levels=water.reg.labels)),
height=0.2, position=position_dodge(0.5)) +
labs(y="Wetland Flood-Frequency Cutoff",
x="Posterior Effect Size for Log(Share of Properties with Flood Risk [%])\nv. Unprotected Non-WOTUS Wetland Area [ha/1000 tract ha]") +
theme(text = element_text(size=14)) +
facet_wrap(.~group, scales="free_x")
p1
fld.lists = list()
for (i in 1:n.g) {
grp = groups[i]
df = area.dfs[[grp]]
fld.lists[[grp]] = list(cutoff_id = as.integer(factor(df$water_cutoff)),
area_norm = as.vector(df$Tract_Normalized_Wetland_Area)*1000,
fld_pfs = as.vector(df$FLD_PFS))
}
set.seed(271)
linear.models = list()
for (i in 1:n.g) {
grp = groups[i]
ml <- ulam(alist(fld_pfs ~ normal(mu, sigma),
log(mu) <- a[cutoff_id] + b[cutoff_id]*area_norm,
c(a, b)[cutoff_id] ~ multi_normal( c(a_fld,b_fld) , Rho , sigma_fld ),
a_fld ~ normal(0,1),
b_fld ~ normal(0,1),
sigma_fld ~ exponential(1),
sigma ~ exponential(1),
Rho ~ lkj_corr(2)),
data=fld.lists[[grp]], chains=1, log_lik=TRUE)
linear.models[[grp]] = ml
}
